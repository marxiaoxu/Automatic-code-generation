%% Abstract: HRTimer_Enable
%%    STM32 HR Timers Enable Timer Master to timer E
%%    Generated code is based on STM32 HAL Library files.
%%
%% Copyright 1990-2009 The MathWorks, Inc.
%assign CodeFormat = "Embedded-C"
%implements HRTimer_Enable "C"

%% %include "FunctionCalledAsChart.tlc"

%%warning "---------->Enable HRTimers"

%if !EXISTS(::CreateHRTimers)
    %assign ::CreateHRTimers  = TLC_TRUE
%endif

%if !EXISTS(::InsertIncludesToHRTIM)
    %assign ::InsertIncludesToHRTIM  = TLC_TRUE
%endif

%if !EXISTS(::InsertIncludesFromHRTIM)
    %assign ::InsertIncludesFromHRTIM  = TLC_TRUE
%endif

%if !EXISTS(::InsertHRTIM)
    %assign ::InsertHRTIM  = TLC_TRUE
%endif

%assign ::CreateHRTimers  = TLC_TRUE
%%trace CreateHRTimers  %<CreateHRTimers>


%% Create function for HRTimers:
%if EXISTS(CreateHRTimers) && (CreateHRTimers == TLC_TRUE)
    %%assign ::CreateHRTimers = TLC_FALSE


%% Code for system initialization:
%function Start(block,system) Output
%endfunction


%% Code for HRTimers configuration call:
%function BlockInstanceSetup(block, system) void
    %%model.c and model.h files
    %assign SrcBaseName = LibGetMdlSrcBaseName()
    %assign modelH      = LibCreateSourceFile("Header", "Simulink", SrcBaseName)
    %assign modelC      = LibCreateSourceFile("Source", "Simulink", SrcBaseName)
    %%model_HRTIM.h and model_HRTIM.c files
    %assign SrcBaseName_HRTIM = "%<SrcBaseName>_HRTIM"
    %assign modelH_HRTIM      = LibCreateSourceFile("Header", "Simulink", SrcBaseName_HRTIM)
    %assign modelC_HRTIM      = LibCreateSourceFile("Source", "Simulink", SrcBaseName_HRTIM)
    %%Include model.h to model_HRTIM.c
    %if EXISTS(::InsertIncludesToHRTIM) && (::InsertIncludesToHRTIM == TLC_TRUE)
        %assign ::InsertIncludesToHRTIM    = TLC_FALSE
        %openfile HRTIM_Buf
            #include "%<SrcBaseName>.h"
            #include "%<SrcBaseName_HRTIM>.h"
        %closefile HRTIM_Buf
        %<LibSetSourceFileSection(modelC_HRTIM,"Includes",HRTIM_Buf)>
    %endif
    %%AND Include model_HRTIM.h to model.c
    %if EXISTS(::InsertIncludesFromHRTIM) && (::InsertIncludesFromHRTIM == TLC_TRUE)
        %assign ::InsertIncludesFromHRTIM    = TLC_FALSE
        %openfile HRTIM_Buf
            #include "%<SrcBaseName_HRTIM>.h"
        %closefile HRTIM_Buf
        %<LibSetSourceFileSection(modelH,"Includes",HRTIM_Buf)>

        %openfile HRTIM_Buf
            #include "STM32_Config.h"
        %closefile HRTIM_Buf
        %<LibSetSourceFileSection(modelH_HRTIM,"Includes",HRTIM_Buf)>
    %endif

    %%%%%%%%%%%%%%%%%%%%%% HRTIM %%%%%%%%%%%%%%%%%%%%%%%%%
    %assign NbHRTim  = SFcnParamSettings.NbHRTim
    %assign HRTIM_Name = SFcnParamSettings.HRTIM_Name
    %assign M_Enable = SFcnParamSettings.M_Enable
    %assign A_Enable = SFcnParamSettings.A_Enable
    %assign B_Enable = SFcnParamSettings.B_Enable
    %assign C_Enable = SFcnParamSettings.C_Enable
    %assign D_Enable = SFcnParamSettings.D_Enable
    %assign E_Enable = SFcnParamSettings.E_Enable
    %assign F_Enable = SFcnParamSettings.F_Enable

    %% Code for required TIM external definition: in model_HRTIM.c file
    %assign timNum = IDNUM("%<HRTIM_Name>")[1]

    %%Initialization should be done once only
    %if EXISTS(::InsertHRTIM) && (::InsertHRTIM == TLC_TRUE)

    %openfile HRTIM_Buf
        /* %<HRTIM_Name> handler */
        extern HRTIM_HandleTypeDef hhrtim%<timNum>;
    %closefile HRTIM_Buf
    %<LibSetSourceFileSection(modelH_HRTIM,"Defines",HRTIM_Buf)>

    %endif
%endfunction


%% Function: Outputs ==========================================
%% Abstract:
%% HRTimers input value depending on pin config
%%
%function Outputs(block, system) Output
    %%model.c and model.h files
    %assign SrcBaseName = LibGetMdlSrcBaseName()
    %assign modelH      = LibCreateSourceFile("Header", "Simulink", SrcBaseName)
    %assign modelC      = LibCreateSourceFile("Source", "Simulink", SrcBaseName)
    %%model_HRTIM.h and model_HRTIM.c files
    %assign SrcBaseName_HRTIM = "%<SrcBaseName>_HRTIM"
    %assign modelH_HRTIM      = LibCreateSourceFile("Header", "Simulink", SrcBaseName_HRTIM)
    %assign modelC_HRTIM      = LibCreateSourceFile("Source", "Simulink", SrcBaseName_HRTIM)

    %%%%%%%%%%%%%%%%%%%%%% HRTIM %%%%%%%%%%%%%%%%%%%%%%%%%
    %assign NbHRTim  = SFcnParamSettings.NbHRTim
    %assign HRTIM_Name = SFcnParamSettings.HRTIM_Name
    %assign M_Enable = SFcnParamSettings.M_Enable
    %assign A_Enable = SFcnParamSettings.A_Enable
    %assign B_Enable = SFcnParamSettings.B_Enable
    %assign C_Enable = SFcnParamSettings.C_Enable
    %assign D_Enable = SFcnParamSettings.D_Enable
    %assign E_Enable = SFcnParamSettings.E_Enable
    %assign F_Enable = SFcnParamSettings.F_Enable

    %assign timNum = IDNUM("%<HRTIM_Name>")[1]

    %if ISEQUAL(M_Enable,"on")
    /* Enable Master Timer */
    __HAL_HRTIM_ENABLE(&hhrtim%<timNum>, HRTIM_TIMERID_MASTER);
    %endif
    %if ISEQUAL(A_Enable,"on")
    /* Enable Timer A */
    __HAL_HRTIM_ENABLE(&hhrtim%<timNum>, HRTIM_TIMERID_TIMER_A);
    %endif
    %if ISEQUAL(B_Enable,"on")
    /* Enable Timer B */
    __HAL_HRTIM_ENABLE(&hhrtim%<timNum>, HRTIM_TIMERID_TIMER_B);
    %endif
    %if ISEQUAL(C_Enable,"on")
    /* Enable Timer C */
    __HAL_HRTIM_ENABLE(&hhrtim%<timNum>, HRTIM_TIMERID_TIMER_C);
    %endif
    %if ISEQUAL(D_Enable,"on")
    /* Enable Timer D */
    __HAL_HRTIM_ENABLE(&hhrtim%<timNum>, HRTIM_TIMERID_TIMER_D);
    %endif
    %if ISEQUAL(E_Enable,"on")
    /* Enable Timer E */
    __HAL_HRTIM_ENABLE(&hhrtim%<timNum>, HRTIM_TIMERID_TIMER_E);
    %endif
    %if ISEQUAL(F_Enable,"on")
    /* Enable Timer F */
    __HAL_HRTIM_ENABLE(&hhrtim%<timNum>, HRTIM_TIMERID_TIMER_F);
    %endif
%endfunction

%else
%% ERROR HRTimers Enable MUST BE CALLED ONCE ONLY
%trace ERROR HRTimers Enable MUST BE CALLED ONCE ONLY
%endif

%% [EOF] HRTimer_Enable.tlc
